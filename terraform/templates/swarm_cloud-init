#cloud-config

coreos:
  units:
    - name: etcd.service
      mask: true
    - name: etcd2.service
      command: start
    - name: docker.service
      command: start
      drop-ins:
        - name: "10-custom-docker-options.conf"
          content: |
            [Service]
            Environment="DOCKER_OPTS=-H=0.0.0.0:2376 -H unix:///var/run/docker.sock --tlsverify --tlscacert=/etc/docker/ssl/ca.pem --tlscert=/etc/docker/ssl/cert.pem --tlskey=/etc/docker/ssl/key.pem --cluster-advertise eth0:2376 --cluster-store etcd://127.0.0.1:2379/docker"
    - name: swarm-agent.service
      enable: true
      content: |
        [Unit]
        Description=swarm agent
        Requires=docker.service
        After=docker.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=20m
        ExecStartPre=/usr/bin/docker pull swarm:${swarm_version}
        ExecStartPre=-/usr/bin/docker rm -f swarm-agent
        ExecStart=/usr/bin/docker run --name swarm-agent --restart=always swarm:${swarm_version} join --addr=$private_ipv4:2376 etcd://$private_ipv4:2379/docker
        ExecStop=/usr/bin/docker rm -f swarm-agent
    - name: swarm-manager.service
      enable: true
      content: |
        [Unit]
        Description=swarm manager
        Requires=docker.service
        After=docker.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=20m
        ExecStartPre=/usr/bin/docker pull swarm:${swarm_version}
        ExecStartPre=-/usr/bin/docker rm -f swarm-manager
        ExecStart=/usr/bin/docker run --name swarm-manager -p 2375:2375 -v /etc/docker/ssl:/etc/docker/ssl --net=host --restart=always swarm:${swarm_version} manage --tlsverify --tlscacert=/etc/docker/ssl/ca.pem --tlscert=/etc/docker/ssl/cert.pem --tlskey=/etc/docker/ssl/key.pem etcd://$private_ipv4:2379/docker
        ExecStop=/usr/bin/docker rm -f swarm-manager
    - name: registrator.service
      enable: true
      content: |
        [Unit]
        Description=registrator
        Requires=docker.service
        After=docker.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=20m
        ExecStartPre=/usr/bin/docker pull gliderlabs/registrator:latest
        ExecStartPre=-/usr/bin/docker rm -f registrator
        ExecStart=/usr/bin/docker run --net=host --restart=always --name=registrator --volume=/var/run/docker.sock:/tmp/docker.sock gliderlabs/registrator:latest -ip $private_ipv4 etcd://$private_ipv4:2379/registrator
        ExecStop=/usr/bin/docker rm -f registrator
    - name: registry.service
      enable: true
      content: |
        [Unit]
        Description=docker registry
        Requires=docker.service
        After=docker.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=20m
        ExecStartPre=/usr/bin/docker pull registry:${docker_registry_version}
        ExecStartPre=-/usr/bin/docker rm -f registry
        ExecStart=/usr/bin/docker run --name registry -p 127.0.0.1:5000:5000 --restart always --env-file /etc/docker/registry.env registry:${docker_registry_version}
        ExecStop=/usr/bin/docker rm -f registry




  etcd2:
    discovery: ${discovery_url}
    advertise-client-urls: http://$private_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001
    data-dir: /var/lib/etcd2
    initial-cluster-token: ${cluster_token}
  update:
    reboot-strategy: "off"
